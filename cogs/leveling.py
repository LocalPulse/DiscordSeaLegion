import disnake
from disnake.ext import commands
import random
from config import user_data, exp_range, calculate_level

class Leveling(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    @commands.Cog.listener()
    async def on_message(self, message):
        if message.author.bot:
            return

        user_id = message.author.id
        if user_id not in user_data:
            user_data[user_id] = {"xp": 0, "level": 1}

        xp_gained = random.randint(exp_range["min"], exp_range["max"])
        user_data[user_id]["xp"] += xp_gained

        new_level = calculate_level(user_data[user_id]["xp"])
        if new_level > user_data[user_id]["level"]:
            user_data[user_id]["level"] = new_level
            await message.channel.send(f"{message.author.mention} –¥–æ—Å—Ç–∏–≥ {new_level} —É—Ä–æ–≤–Ω—è! üéâ")

    @commands.slash_command(description="–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤–∞—à —É—Ä–æ–≤–µ–Ω—å –∏ XP")
    async def rank(self, inter: disnake.ApplicationCommandInteraction):
        user_id = inter.author.id
        if user_id in user_data:
            level = user_data[user_id]["level"]
            xp = user_data[user_id]["xp"]
            await inter.response.send_message(f"{inter.author.mention}, –≤–∞—à —É—Ä–æ–≤–µ–Ω—å: {level}, XP: {xp}")
        else:
            await inter.response.send_message(f"{inter.author.mention}, —É –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç XP. –ù–∞—á–Ω–∏—Ç–µ –ø–∏—Å–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è, —á—Ç–æ–±—ã –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å XP!")

    @commands.slash_command(description="–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –¥–∏–∞–ø–∞–∑–æ–Ω —Å–ª—É—á–∞–π–Ω–æ–≥–æ –ø–æ–ª—É—á–µ–Ω–∏—è –æ–ø—ã—Ç–∞ –∑–∞ —Å–æ–æ–±—â–µ–Ω–∏—è")
    @commands.has_permissions(administrator=True)
    async def set_exp_range(self, inter: disnake.ApplicationCommandInteraction, min_exp: int, max_exp: int):
        if min_exp < 0 or max_exp < 0:
            await inter.response.send_message("–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –æ–ø—ã—Ç –Ω–µ –º–æ–≥—É—Ç –±—ã—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º–∏ —á–∏—Å–ª–∞–º–∏.", ephemeral=True)
            return

        if min_exp > max_exp:
            await inter.response.send_message("–ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –æ–ø—ã—Ç–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ.", ephemeral=True)
            return

        exp_range["min"] = min_exp
        exp_range["max"] = max_exp
        await inter.response.send_message(f"–î–∏–∞–ø–∞–∑–æ–Ω –ø–æ–ª—É—á–µ–Ω–∏—è –æ–ø—ã—Ç–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: –æ—Ç {min_exp} –¥–æ {max_exp} –∑–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ.")

def setup(bot):
    bot.add_cog(Leveling(bot))