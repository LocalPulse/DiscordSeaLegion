import disnake
from disnake.ext import commands
from config import user_data, calculate_level
from utils import load_roles, save_roles


class RoleManagement(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        self.role_assignments = load_roles()

    @commands.command()
    @commands.has_permissions(administrator=True)
    async def set_roles(self, ctx, check_role_id: int = None, level: int = None, assign_role_id: int = None):
        if not all([check_role_id, level, assign_role_id]):
            await ctx.send(
                "‚ö†Ô∏è **–û—à–∏–±–∫–∞:** –í—Å–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n"
                "`!set_roles <ID —Ä–æ–ª–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏> <–£—Ä–æ–≤–µ–Ω—å> <ID –≤—ã–¥–∞–≤–∞–µ–º–æ–π —Ä–æ–ª–∏>`\n\n"
                "**–ü—Ä–∏–º–µ—Ä:** `!set_roles 1306206217110290485 5 1306207277438472202`"
            )
            return

        if level <= 0:
            await ctx.send("‚ö†Ô∏è **–û—à–∏–±–∫–∞:** –£—Ä–æ–≤–µ–Ω—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —Ü–µ–ª—ã–º —á–∏—Å–ª–æ–º. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å.")
            return

        if str(check_role_id) not in self.role_assignments:
            self.role_assignments[str(check_role_id)] = {}

        self.role_assignments[str(check_role_id)][str(level)] = str(assign_role_id)
        save_roles(self.role_assignments)

        await ctx.send(
            f"‚úÖ **–£—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ:** –¢–µ–ø–µ—Ä—å —Ä–æ–ª—å <@&{assign_role_id}> –±—É–¥–µ—Ç –≤—ã–¥–∞–Ω–∞ –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ —Ä–æ–ª–∏ <@&{check_role_id}> "
            f"–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏ —É—Ä–æ–≤–Ω—è {level}. \n \n"
            f"üéñÔ∏è –î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤—Å–µ—Ö —Ä–æ–ª–µ–π –Ω–∞–ø–∏—à–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É `!show_roles`"
        )

    @commands.command()
    async def edit_rank(self, ctx, user: disnake.Member = None, level: int = None, xp: int = None):

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–≥–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ `user`
        if not user:
            await ctx.send(
                "‚ö†Ô∏è **–û—à–∏–±–∫–∞:** –£–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –ü—Ä–∏–º–µ—Ä –∫–æ–º–∞–Ω–¥—ã: `!edit_rank @User 10` –∏–ª–∏ `!edit_rank @User xp=200`.")
            return

        if user.id not in user_data:
            user_data[user.id] = {"xp": 0, "level": 1}

        if level is not None:
            if level <= 0:
                await ctx.send("‚ö†Ô∏è **–û—à–∏–±–∫–∞:** –£—Ä–æ–≤–µ–Ω—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —Ü–µ–ª—ã–º —á–∏—Å–ª–æ–º.")
                return
            xp_for_level = level ** 3
            user_data[user.id]["level"] = level
            user_data[user.id]["xp"] = xp_for_level
        elif xp is not None:
            if xp < 0:
                await ctx.send("‚ö†Ô∏è **–û—à–∏–±–∫–∞:** –û–ø—ã—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–µ–æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º.")
                return
            user_data[user.id]["xp"] = xp
            user_data[user.id]["level"] = calculate_level(xp)
        else:
            await ctx.send("‚ö†Ô∏è **–û—à–∏–±–∫–∞:** –£–∫–∞–∂–∏—Ç–µ –ª–∏–±–æ —É—Ä–æ–≤–µ–Ω—å, –ª–∏–±–æ –æ–ø—ã—Ç –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è.")
            return

        new_level = user_data[user.id]["level"]
        new_xp = user_data[user.id]["xp"]

        user_roles = [role.id for role in user.roles]
        assigned_role = None

        for check_role_id, levels in self.role_assignments.items():
            if int(check_role_id) in user_roles:  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –Ω—É–∂–Ω–æ–π —Ä–æ–ª–∏
                assign_role_id = levels.get(str(new_level))
                if assign_role_id:
                    role = disnake.utils.get(ctx.guild.roles, id=int(assign_role_id))
                    if role and role not in user.roles:
                        await user.add_roles(role)
                        assigned_role = role
                        await ctx.send(f"‚úÖ {user.mention} —Ç–µ–ø–µ—Ä—å –ø–æ–ª—É—á–∏–ª —Ä–æ–ª—å: **{role.name}** –Ω–∞ —É—Ä–æ–≤–Ω–µ {new_level}!")

        if not assigned_role:
            await ctx.send(f"‚ÑπÔ∏è –î–ª—è {user.mention} –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –ø–æ–¥—Ö–æ–¥—è—â–µ–π —Ä–æ–ª–∏ –Ω–∞ —É—Ä–æ–≤–Ω–µ {new_level}.")

        await ctx.send(
            f"üìà **–£—Ä–æ–≤–µ–Ω—å –∏ –æ–ø—ã—Ç –æ–±–Ω–æ–≤–ª–µ–Ω—ã:**\n"
            f"{user.mention} ‚Äî **–£—Ä–æ–≤–µ–Ω—å:** {new_level}, **XP:** {new_xp}"
        )

    @commands.command()
    async def show_roles(self, ctx):
        if not self.role_assignments:
            await ctx.send("üéñÔ∏è –ü—Ä–∏–≤—è–∑–∫–∏ —Ä–æ–ª–µ–π –∫ —É—Ä–æ–≤–Ω—è–º –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.")
            return

        embed = disnake.Embed(
            title="‚öîÔ∏è –ü–†–ò–í–Ø–ó–ö–ò –†–û–õ–ï–ô –ö –£–†–û–í–ù–Ø–ú",
            description="üîπ **–î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –ø—Ä–∏–≤—è–∑–∫–µ —Ä–æ–ª–µ–π –∫ —É—Ä–æ–≤–Ω—è–º** üîπ",
            color=disnake.Color.blue()
        )
        embed.set_thumbnail(url=self.bot.user.avatar.url)

        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∏–≤—è–∑–æ–∫ —Ä–æ–ª–µ–π –∏ —É—Ä–æ–≤–Ω–µ–π —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ–º
        for check_role_id, levels in self.role_assignments.items():
            role = disnake.utils.get(ctx.guild.roles, id=int(check_role_id))
            role_name = role.name if role else f"ID: {check_role_id}"

            level_info = ""
            for level, assign_role_id in sorted(levels.items(), key=lambda x: int(x[0])):
                assign_role = disnake.utils.get(ctx.guild.roles, id=int(assign_role_id))
                assign_role_name = assign_role.name if assign_role else f"ID: {assign_role_id}"
                level_info += f" --- **–£—Ä–æ–≤–µ–Ω—å {level}** ‚Üí {assign_role_name} *(ID: {assign_role_id})*\n"

            embed.add_field(
                name=f"üéñÔ∏è –†–æ–ª—å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏: **{role_name}** *(ID: {check_role_id})*",
                value=level_info,
                inline=False
            )

        embed.set_footer(text="–ü—Ä–∏–≤—è–∑–∫–∏ —Ä–æ–ª–µ–π –∫ —É—Ä–æ–≤–Ω—è–º SEA LEGION")
        await ctx.send(embed=embed)


def setup(bot):
    bot.add_cog(RoleManagement(bot))